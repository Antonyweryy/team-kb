// main.js

const tg = (window.Telegram && window.Telegram.WebApp) ? window.Telegram.WebApp : null;

async function checkAccess() {
  // –ü–æ–ª—É—á–∞–µ–º div –¥–ª—è –∏–º–µ–Ω–∏
  const usernameDiv = document.getElementById("username");

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –∑–∞–≥–ª—É—à–∫–∏
  const showAccessDenied = () => {
    document.body.innerHTML = `
      <div class="access-denied">
        <div class="icon">üö´</div>
        <div class="title">–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω</div>
        <div class="subtitle">–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É</div>
        <a href="mailto:admin@example.com" class="btn">–°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–æ–º</a>
      </div>
    `;
  };

  // –ï—Å–ª–∏ Telegram –Ω–µ—Ç ‚Äî —Å—Ä–∞–∑—É –∑–∞–≥–ª—É—à–∫–∞
  if (!tg) {
    showAccessDenied();
    return false;
  }

  try {
    tg.ready?.();

    const res = await fetch("https://broken-meadow-47c5.ivlievd156.workers.dev/validate", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ initData: tg.initData })
    });

    const data = await res.json();

    // –õ—é–±–∞—è –æ—à–∏–±–∫–∞ –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–π id ‚Üí –∑–∞–≥–ª—É—à–∫–∞
    if (!data?.ok || !data?.user?.id || data.allowed === false) {
      showAccessDenied();
      return false;
    }

    // –í—Å—ë –æ–∫ ‚Äî —Å–∫—Ä—ã–≤–∞–µ–º —Å–ø–∏–Ω–Ω–µ—Ä –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
// –ü–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞, –ø—Ä—è–º–æ –ø–µ—Ä–µ–¥ return true:
const loader = document.getElementById("loader");
const main = document.getElementById("main-content");
if (loader) loader.style.display = "none";
if (main) main.style.display = "block";


    // –ï—Å–ª–∏ –≤—Å—ë –æ–∫ ‚Äî –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–º—è –∏ —Ñ–æ—Ç–æ
    const name = data.user.first_name || "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å";
    const photo = data.user.photo_url;
    usernameDiv.textContent = "";
    usernameDiv.style.display = "flex";
    usernameDiv.style.alignItems = "center";
    usernameDiv.style.gap = "12px";

    if (photo) {
      const img = document.createElement("img");
      img.src = photo;
      img.alt = name;
      img.style.width = "32px";
      img.style.height = "32px";
      img.style.objectFit = "cover";
      img.style.borderRadius = "50%";
      img.style.marginRight = "12px";
      usernameDiv.appendChild(img);
    }
    usernameDiv.appendChild(document.createTextNode(name));

    // === –¥–æ—Å—Ç—É–ø –∫ –º–æ–¥—É–ª—è–º ===
    const isPro = data.isPro;
    const isExpert = data.isExpert;

    console.log("User data:", data.user);
    console.log("isPro:", data.isPro, "isExpert:", data.isExpert);

    
    // —Å–∫—Ä—ã–≤–∞–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    document.querySelectorAll(".pro, .expert").forEach(el => {
      el.style.display = "none";
    });

    if (isPro) document.querySelectorAll(".pro").forEach(el => el.style.display = "block");
    if (isExpert) document.querySelectorAll(".expert").forEach(el => el.style.display = "block");



    return true;

  } catch (e) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–æ—Å—Ç—É–ø–∞:", e);
    showAccessDenied();
    return false;
  }
}

// UI: –Ω–∞–≤–µ—Å–∏–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –º–æ–¥—É–ª–µ–π
// UI: –Ω–∞–≤–µ—Å–∏–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –º–æ–¥—É–ª–µ–π
function attachListeners() {
  const modules = Array.from(document.querySelectorAll('.module'));

  document.querySelectorAll('.module-list a').forEach(a => {
    a.addEventListener('click', e => {
      e.preventDefault();
      const id = a.dataset.module;
      if (!id) return;
      modules.forEach(m => m.classList.remove('active'));
      const modal = document.getElementById(id);
      if (!modal) return;
      modal.style.removeProperty('display');
      modal.classList.add('active');
      document.body.classList.add('no-scroll');
    });
  });

  document.addEventListener('click', e => {
    if (e.target.closest('.back')) {
      modules.forEach(m => m.classList.remove('active'));
      document.body.classList.remove('no-scroll');
    }
  });

  document.addEventListener('keydown', e => {
    if (e.key === 'Escape') {
      modules.forEach(m => m.classList.remove('active'));
      document.body.classList.remove('no-scroll');
    }
  });
}

// –ó–∞–ø—É—Å–∫ –ø–æ—Å–ª–µ DOM
document.addEventListener('DOMContentLoaded', async () => {
  const allowed = await checkAccess(); // –∂–¥–µ–º –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞
  if (allowed) {
    attachListeners();
    // —Å–∫—Ä—ã–≤–∞–µ–º —Å–ø–∏–Ω–Ω–µ—Ä –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
    const loader = document.getElementById("loader");
    const main = document.getElementById("main-content");
    if (loader) loader.style.display = "none";
    if (main) main.style.display = "block";
  }
  // –µ—Å–ª–∏ allowed=false ‚Äî —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —É–∂–µ –∑–∞–º–µ–Ω–µ–Ω–∞ –Ω–∞ –∑–∞–≥–ª—É—à–∫—É
});

